{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/UserPost/UserPost.module.css","components/Profile/Messages/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Messages/Post/Post.jsx","components/Profile/UserPost/UserPost.jsx","components/Profile/UserPost/UserPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","classes","onClick","autoFocus","onBlur","updateUserStatus","onChange","e","target","value","ProfileInfo","user","avatar","src","profile","photos","small","alt","contacts","fullName","description","aboutMe","facebook","github","Post","wrap","message","message__img","message__text","text","like","likeCount","maxLength30","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","user_post_button","UserPost","console","log","postElements","postData","map","post","likesCount","key","id","user_post","user_post_title","formData","addUserPost","postItemText","messagesContainer","UserPostContainer","connect","state","newPostText","profilePage","postsData","dispatch","userPostActionCreator","Profile","town","prof","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","setTimeout","getUserStatus","React","Component","compose","auth","idAuth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.7ddbf3c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"ProfileInfo_user__2dgzg\",\"avatar\":\"ProfileInfo_avatar__8UV5Q\",\"description\":\"ProfileInfo_description__3KhUc\",\"status\":\"ProfileInfo_status__10Ol5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2EmaV\",\"profile_bunner\":\"Profile_profile_bunner__zgfG8\",\"user_post\":\"Profile_user_post__20Ecx\",\"user_post__title\":\"Profile_user_post__title__2fW1G\",\"user_post__button\":\"Profile_user_post__button__2Gddd\",\"income\":\"Profile_income__2-w-w\",\"message\":\"Profile_message__24k01\",\"message__img\":\"Profile_message__img__W_T8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserPost_user__psMHz\",\"user_post\":\"UserPost_user_post__2da2T\",\"user_post_form\":\"UserPost_user_post_form__10CMq\",\"error\":\"UserPost_error__2G13S\",\"user_post_title\":\"UserPost_user_post_title__2182B\",\"user_post_button\":\"UserPost_user_post_button__nnRFj\",\"user_post__button\":\"UserPost_user_post__button__2pQLk\",\"messagesContainer\":\"UserPost_messagesContainer__1U7ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Post_wrap__24aiL\",\"message\":\"Post_message__1L_I-\",\"message__img\":\"Post_message__img__25UAQ\",\"message__text\":\"Post_message__text__3aJY_\",\"like\":\"Post_like__3spqo\"};","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode]  = useState(false);\r\n    let [status, setStatus]  = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    \r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n    \r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.target.value);\r\n    };\r\n    \r\n    return (\r\n        <div className={classes.status}>\r\n            {!editMode &&\r\n                <div onClick={activateEditMode}>\r\n                    <span >{ props.status || \"No status\" }</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={ deActivateEditMode } onChange={ onStatusChange } value={ status }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) =>{\r\n    return(\r\n        <div>\r\n            <div className={classes.user}>\r\n                {/* Автарка */}\r\n                <div className={classes.avatar}>\r\n                    <img src={props.profile.photos.small} alt={props.profile.contacts.fullName} />\r\n                </div>\r\n        \r\n                {/* Описание */}\r\n                <div className={classes.description}>\r\n                    <p>{props.profile.fullName}</p>\r\n                    <br/>\r\n                    <p> <b>Статус: {props.profile.aboutMe}</b> </p>\r\n                    \r\n                    {/*Статус*/}\r\n                    {/*<ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>*/}\r\n                    <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                    \r\n                    <br/>\r\n                    <p><b>Контакты:</b> </p>\r\n                    <p>Facebook: {props.profile.contacts.facebook}</p>\r\n                    <p>Github: {props.profile.contacts.github}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n      <div className={classes.wrap}>\r\n        <div className={classes.message}>\r\n          <div className={classes.message__img}>\r\n            <img src=\"https://pbs.twimg.com/profile_images/1186282378714472449/1FFdpXMC_bigger.jpg\" alt=\"\" />\r\n          </div>\r\n          <div className={classes.message__text}>{props.text}</div>       \r\n        </div>\r\n        <div className={classes.like}>{props.likeCount}</div>\r\n      </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './UserPost.module.css';\r\nimport Post from \"../Messages/Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\nconst UserPost = props => {\r\n    \r\n    console.log('render');\r\n    \r\n    let postElements = props.postData.map(post =>\r\n        <Post text={post.post} likeCount={\"likes \" + post.likesCount} key={post.id}/>\r\n    )\r\n    \r\n    let addPost = (formData) => {\r\n        props.addUserPost(formData.postItemText)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <div className={classes.user}>\r\n                \r\n                {/* User post */}\r\n                <div className={classes.user_post}>\r\n                    {/*Заголовок*/}\r\n                    <div className={classes.user_post_title}>My post title</div>\r\n                    \r\n                    {/*Форма - Ввод сообщения*/}\r\n                    <div>\r\n                        <AddPostReduxForm onSubmit={addPost}/>\r\n                    </div>\r\n                </div>\r\n            \r\n            </div>\r\n            \r\n            <div className={classes.messagesContainer}>\r\n                {postElements}\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea}\r\n                   name='postItemText'\r\n                   placeholder='Add post'\r\n                   validate={[requiredField, maxLength30]}\r\n            />\r\n        \r\n            {/*Отпавить сообщение*/}\r\n            <button className={classes.user_post_button} >Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddUserPost'})(AddPostForm)\r\n\r\nexport default UserPost;","import React from 'react';\r\nimport {userPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport UserPost from \"./UserPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postData: state.profilePage.postsData\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addUserPost: (postItemText) => {\r\n            dispatch(userPostActionCreator(postItemText))\r\n        }\r\n    }\r\n}\r\n\r\nconst UserPostContainer = connect(mapStateToProps, mapDispatchToProps)(UserPost)\r\n\r\nexport default UserPostContainer;","import React from 'react';\r\nimport classes from  './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport UserPostContainer from \"./UserPost/UserPostContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) =>{\r\n    \r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.profile}>\r\n\r\n            {/* Профиль */}\r\n            <ProfileInfo name={\"Denis Graur\"}\r\n                         town={\"Taganrog\"}\r\n                         prof={\"Web Developer\"}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}\r\n            />\r\n        \r\n            {/* Сообщение пользователя */}\r\n            <UserPostContainer />\r\n\r\n      </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId // достем id из url\r\n        \r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        \r\n        this.props.getUserProfile(userId);\r\n        \r\n        setTimeout(() => {\r\n            this.props.getUserStatus(userId);\r\n        }, 1000)\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n           <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    idAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}