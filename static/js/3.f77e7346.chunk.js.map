{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/UserPost/UserPost.module.css","components/Profile/Messages/Post/Post.module.css","components/Profile/ProfileInfo/ProfileEditForm.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileDescriptions/ProfileDescriptions.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Messages/Post/Post.jsx","components/Profile/UserPost/UserPost.jsx","components/Profile/UserPost/UserPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileEditReduxForm","reduxForm","form","props","onSubmit","handleSubmit","error","className","classes","errorSummary","Field","component","Input","name","type","placeholder","validate","Textarea","Object","keys","profile","contacts","map","key","styles","editProfile_button_save","onClick","enableEditMode","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","updateUserStatus","onChange","e","target","value","ContactsHelper","contactTitle","contactValue","contacts_title","ProfileDescriptions","description","description_name","fullName","description_elem","description_title","lookingForAJobDescription","aboutMe","description_button","isOwner","ProfileInfo","content","content_profile","avatar","src","photos","small","userPhoto","alt","addUserPhoto","id","files","length","addPhoto","initialValues","formData","saveProfile","then","Post","wrap","message","message__img","message__text","text","like","likeCount","maxLength30","maxLengthCreator","AddPostReduxForm","requiredField","user_post_button","UserPost","postElements","postData","post","likesCount","user","messagesContainer","user_post","addUserPost","postItemText","UserPostContainer","connect","state","newPostText","profilePage","postsData","dispatch","userPostActionCreator","Profile","Preloader","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","idAuth","isAuth","withRouter"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,gBAAkB,qCAAqC,OAAS,4BAA4B,YAAc,iCAAiC,iBAAmB,sCAAsC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,mBAAqB,wCAAwC,OAAS,4BAA4B,eAAiB,oCAAoC,wBAA0B,6CAA6C,aAAe,oC,oBCA9lBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,eAAiB,gCAAgC,UAAY,2BAA2B,iBAAmB,kCAAkC,kBAAoB,mCAAmC,OAAS,wBAAwB,QAAU,yBAAyB,aAAe,gC,oBCA5UD,EAAOC,QAAU,CAAC,KAAO,uBAAuB,UAAY,4BAA4B,eAAiB,iCAAiC,MAAQ,wBAAwB,iBAAmB,mCAAmC,WAAa,6BAA6B,kBAAoB,oCAAoC,kBAAoB,sC,oBCAtVD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,aAAe,2BAA2B,cAAgB,4BAA4B,KAAO,qB,qMC2E1JC,EAFcC,YAAU,CAACC,KAAM,mBAAjBD,EAnEL,SAACE,GACrB,OACI,0BAAMC,SAAUD,EAAME,cAGlB,6BACMF,EAAMG,OAAS,yBAAKC,UAAWC,IAAQC,cAAxB,IAAwCN,EAAMG,MAA9C,MASrB,6BAII,8BAAM,2CACN,kBAACI,EAAA,EAAD,CAAOC,UAAWC,IAAOC,KAAK,WAAWC,KAAM,OACxCC,YAAY,YAAYC,SAAU,MAa7C,6BACI,6CACA,kBAACN,EAAA,EAAD,CAAOC,UAAWM,IAAUJ,KAAK,4BAC1BE,YAAY,iBAAiBC,SAAU,MAIlD,6BAAK,wCACD,kBAACN,EAAA,EAAD,CAAOC,UAAWM,IAAUJ,KAAK,UAC1BE,YAAY,cAAcC,SAAU,MAG/C,6BAGA,6BACKE,OAAOC,KAAKhB,EAAMiB,QAAQC,UAAUC,KAAI,SAAAC,GACrC,OACI,yBAAKA,IAAKA,GACN,2BAAIA,EAAJ,MACC,kBAACb,EAAA,EAAD,CAAOC,UAAWC,IAAOE,KAAM,OAAQD,KAAM,YAAcU,EAAKR,YAAaQ,EAAKP,SAAU,UAM7G,yBAAKT,UAAWiB,IAAOC,yBACnB,4BAAQC,QAASvB,EAAMwB,gBAAvB,aC3BDC,EArCgB,SAACzB,GAE5B,MAA+B0B,oBAAS,GAAxC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA2BF,mBAAS1B,EAAM6B,QAA1C,mBAAKA,EAAL,KAAaC,EAAb,KAEAC,qBAAU,WACND,EAAU9B,EAAM6B,UACjB,CAAC7B,EAAM6B,SAeV,OACI,yBAAKzB,UAAWC,IAAQwB,SAClBF,GACE,yBAAKJ,QAhBQ,WACrBK,GAAY,KAgBA,8BAAS5B,EAAM6B,QAAU,cAGhCF,GACG,6BACI,2BAAOK,WAAW,EAAMC,OAlBb,WACvBL,GAAY,GACZ5B,EAAMkC,iBAAiBL,IAgByCM,SAb7C,SAACC,GACpBN,EAAUM,EAAEC,OAAOC,QAYuEA,MAAQT,OCapGU,EAAiB,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,aACnC,OAAO,6BACH,0BAAMrC,UAAWC,IAAQqC,gBAAiBF,EAA1C,MACCC,IAIME,EAnDa,SAAC3C,GACzB,OACI,yBAAKI,UAAWC,IAAQuC,aAEpB,yBAAKxC,UAAWC,IAAQwC,kBAAmB7C,EAAMiB,QAAQ6B,UAGzD,yBAAK1C,UAAWC,IAAQ0C,kBACpB,kBAAC,EAAD,CAAwB9B,QAASjB,EAAMiB,QAASY,OAAQ7B,EAAM6B,OAAQK,iBAAkBlC,EAAMkC,oBASlG,yBAAK9B,UAAWC,IAAQ0C,kBACpB,yBAAK3C,UAAWC,IAAQ2C,mBAAxB,YACChD,EAAMiB,QAAQgC,2BAInB,yBAAK7C,UAAWC,IAAQ0C,kBACpB,yBAAK3C,UAAWC,IAAQ2C,mBAAxB,YACChD,EAAMiB,QAAQiC,SAAW,MAI9B,6BACI,yBAAK9C,UAAWC,IAAQwC,kBAAxB,YACC9B,OAAOC,KAAKhB,EAAMiB,QAAQC,UAAUC,KAAI,SAAAC,GACrC,OAAO,kBAAC,EAAD,CAAgBA,IAAKA,EAAKoB,aAAcpB,EAAKqB,aAAczC,EAAMiB,QAAQC,SAASE,SAKjG,yBAAKhB,UAAWC,IAAQ8C,oBACnBnD,EAAMoD,SAAW,4BAAQ7B,QAASvB,EAAMwB,gBAAvB,eCsBnB6B,EA1DK,SAACrD,GAEjB,MAA+B0B,oBAAS,GAAxC,mBAAKC,EAAL,KAAeC,EAAf,KAeA,OACI,yBAAKxB,UAAWC,IAAQiD,SACpB,yBAAKlD,UAAWC,IAAQkD,iBACpB,6BAEI,yBAAKnD,UAAWC,IAAQmD,QACpB,yBAAKC,IAAKzD,EAAMiB,QAAQyC,OAAOC,OAASC,IAAWC,IAAK7D,EAAMiB,QAAQC,SAAS4B,aAKvF,6BAEQnB,EAEE,6BAEM,yBAAMvB,UAAWC,IAAQyD,cACpB9D,EAAMoD,SACH,kDAEI,2BAAOW,GAAI,cAAepD,KAAM,OAAQwB,SAlCzD,SAACC,GAChBA,EAAEC,OAAO2B,MAAMC,QACfjE,EAAMkE,SAAS9B,EAAEC,OAAO2B,MAAM,SAqCV,kBAAC,EAAD,CAAiBG,cAAenE,EAAMiB,QAAShB,SAjCnD,SAACmE,GACLpE,EAAMqE,YAAYD,GAC1BE,MAAK,WACT1C,GAAY,OA+ByBX,QAASjB,EAAMiB,WAGtC,kBAAC,EAAD,CAAoBA,QAASjB,EAAMiB,QAASY,OAAQ7B,EAAM6B,OAAQuB,QAASpD,EAAMoD,QAC7DlB,iBAAkBlC,EAAMkC,iBACxBV,eAAgB,kBAAMI,GAAY,U,4CCvCjE2C,EAbF,SAACvE,GACV,OACE,yBAAKI,UAAWC,IAAQmE,MACtB,yBAAKpE,UAAWC,IAAQoE,SACtB,yBAAKrE,UAAWC,IAAQqE,cACtB,yBAAKjB,IAAI,+EAA+EI,IAAI,MAE9F,yBAAKzD,UAAWC,IAAQsE,eAAgB3E,EAAM4E,OAEhD,yBAAKxE,UAAWC,IAAQwE,MAAO7E,EAAM8E,a,QCmBvCC,EAAcC,YAAiB,IAkB/BC,EAAmBnF,YAAU,CAACC,KAAM,sBAAjBD,EAhBL,SAACE,GACjB,OACI,0BAAMC,SAAUD,EAAME,cAGlB,kBAACK,EAAA,EAAD,CAAOC,UAAWM,IAAUJ,KAAK,eAC1BE,YAAY,iBAAiBC,SAAU,CAACqE,IAAeH,KAG9D,yBAAK3E,UAAWC,IAAQ8E,kBACpB,6CAQDC,EA5CE,SAAApF,GACb,IAAIqF,EAAerF,EAAMsF,SAASnE,KAAI,SAAAoE,GAAI,OACtC,kBAAC,EAAD,CAAMX,KAAMW,EAAKA,KAAMT,UAAW,SAAWS,EAAKC,WAAYpE,IAAKmE,EAAKxB,QAO5E,OACI,yBAAM3D,UAAWC,IAAQoF,MAErB,yBAAKrF,UAAWC,IAAQqF,mBACnBL,GAIL,yBAAKjF,UAAWC,IAAQsF,WACpB,kBAACV,EAAD,CAAkBhF,SAbhB,SAACmE,GACXpE,EAAM4F,YAAYxB,EAASyB,oB,QCUpBC,EAFWC,aAfJ,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAME,YAAYD,YAC/BX,SAAUU,EAAME,YAAYC,cAIX,SAACC,GACtB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAsBR,QAKjBE,CAA6CX,G,QCexDkB,EA7BC,SAACtG,GAEb,IAAIA,EAAMiB,QACN,OAAO,kBAACsF,EAAA,EAAD,MAIX,IAAMnD,EAAUpD,EAAMoD,QAChBiB,EAAcrE,EAAMqE,YAE1B,OACI,yBAAKjE,UAAWC,IAAQY,SAGpB,kBAAC,EAAD,CAAaoD,YAAaA,EACbjB,QAASA,EACTnC,QAASjB,EAAMiB,QACfY,OAAQ7B,EAAM6B,OACdqC,SAAUlE,EAAMkE,SAChBhC,iBAAkBlC,EAAMkC,mBAKrC,kBAAC,EAAD,Q,cCxBNsE,E,oKAEF,WACI,IAAIC,EAASC,KAAK1G,MAAM2G,MAAMC,OAAOH,OAEjCA,IACAA,EAASC,KAAK1G,MAAM6G,mBAEhBH,KAAK1G,MAAM8G,QAAQC,KAAK,UAGhCL,KAAK1G,MAAMgH,eAAeP,GAC1BC,KAAK1G,MAAMiH,cAAcR,K,+BAG7B,WACIC,KAAKQ,mB,gCAGT,SAAmBC,EAAWC,EAAWC,GAClCX,KAAK1G,MAAM2G,MAAMC,OAAOH,SAAWU,EAAUR,MAAMC,OAAOH,QACzDC,KAAKQ,mB,oBAIb,WACI,OACI,kBAAC,EAAD,CAAS7C,YAAaqC,KAAK1G,MAAMqE,YACxBjB,SAAUsD,KAAK1G,MAAM2G,MAAMC,OAAOH,OAClCxF,QAASyF,KAAK1G,MAAMiB,QACpBY,OAAQ6E,KAAK1G,MAAM6B,OACnBqC,SAAUwC,KAAK1G,MAAMkE,SACrBhC,iBAAkBwE,KAAK1G,MAAMkC,uB,GAhCnBoF,IAAMC,WA4CtBC,sBACXzB,aARiB,SAACC,GAAD,MAAY,CAC7B/E,QAAS+E,EAAME,YAAYjF,QAC3BY,OAAQmE,EAAME,YAAYrE,OAC1BgF,iBAAkBb,EAAMyB,KAAKhB,OAC7BiB,OAAQ1B,EAAMyB,KAAKE,UAIM,CAACX,mBAAgBC,kBAAe/E,qBAAkBgC,aAAUG,kBACrFuD,IAFWJ,CAGbhB","file":"static/js/3.f77e7346.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__91aon\",\"content_profile\":\"ProfileInfo_content_profile__14f5s\",\"avatar\":\"ProfileInfo_avatar__8UV5Q\",\"description\":\"ProfileInfo_description__3KhUc\",\"description_name\":\"ProfileInfo_description_name__1k2Zm\",\"description_title\":\"ProfileInfo_description_title__1E-4K\",\"description_elem\":\"ProfileInfo_description_elem__3P-sH\",\"description_button\":\"ProfileInfo_description_button__c9ro6\",\"status\":\"ProfileInfo_status__10Ol5\",\"contacts_title\":\"ProfileInfo_contacts_title__2sw2e\",\"editProfile_button_save\":\"ProfileInfo_editProfile_button_save__1VoFV\",\"addUserPhoto\":\"ProfileInfo_addUserPhoto__Rew2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2EmaV\",\"profile_bunner\":\"Profile_profile_bunner__zgfG8\",\"user_post\":\"Profile_user_post__20Ecx\",\"user_post__title\":\"Profile_user_post__title__2fW1G\",\"user_post__button\":\"Profile_user_post__button__2Gddd\",\"income\":\"Profile_income__2-w-w\",\"message\":\"Profile_message__24k01\",\"message__img\":\"Profile_message__img__W_T8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"UserPost_user__psMHz\",\"user_post\":\"UserPost_user_post__2da2T\",\"user_post_form\":\"UserPost_user_post_form__10CMq\",\"error\":\"UserPost_error__2G13S\",\"user_post_button\":\"UserPost_user_post_button__nnRFj\",\"user_title\":\"UserPost_user_title__2jjNe\",\"user_post__button\":\"UserPost_user_post__button__2pQLk\",\"messagesContainer\":\"UserPost_messagesContainer__1U7ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Post_wrap__24aiL\",\"message\":\"Post_message__1L_I-\",\"message__img\":\"Post_message__img__25UAQ\",\"message__text\":\"Post_message__text__3aJY_\",\"like\":\"Post_like__3spqo\"};","import React from \"react\";\r\nimport {Input, Textarea} from \"../../Common/FormControls/FormControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport classes from \"../../Common/FormControls/FormControls.module.css\";\r\nimport styles from './ProfileInfo.module.css';\r\n\r\n/*Edit information about user*/\r\nconst ProfileEditForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            \r\n            {/*Errors*/}\r\n            <div>\r\n                { props.error && <div className={classes.errorSummary}> {props.error} </div> }\r\n            </div>\r\n            \r\n            {/*Button - edit*/}\r\n           {/* <div>{props.isOwner &&\r\n                <button onClick={props.enableEditMode}>edit</button>}\r\n            </div>*/}\r\n    \r\n            {/*User - name*/}\r\n            <div>\r\n                {/*TODO: Добавить label для всех полей форм\r\n                 https://stackoverflow.com/questions/49392535/style-redux-form-field-label\r\n                 */}\r\n                <span><b>Full Name: </b></span>\r\n                <Field component={Input} name='fullName' type={'text'}\r\n                       placeholder='Full Name' validate={[]}/>\r\n            </div>\r\n            \r\n            {/*User - looking for a job*/}\r\n{/*            <div>\r\n                <label>Looking for a job:\r\n                <Field className={classes.test} label={'style me!!'} component={Input} name='lookingForAJob'\r\n                       validate={[]} type={\"checkbox\"}\r\n                />\r\n                </label>\r\n            </div>*/}\r\n            \r\n            {/*User - prof skills*/}\r\n            <div>\r\n                <b>Prof. skills: </b>\r\n                <Field component={Textarea} name='lookingForAJobDescription'\r\n                       placeholder='Description...' validate={[]}/>\r\n            </div>\r\n            \r\n            {/*About Me*/}\r\n            <div><b>About Me:</b>\r\n                <Field component={Textarea} name='aboutMe'\r\n                       placeholder='About me...' validate={[]}/>\r\n            </div>\r\n            \r\n            <br/>\r\n            \r\n            {/*User - contacts*/}\r\n            <div>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <b>{key}: </b>\r\n                            {<Field component={Input} type={'text'} name={'contacts.' + key} placeholder={key} validate={[]}/>}\r\n                        </div>)\r\n                })}\r\n            </div>\r\n    \r\n            {/*Button - save*/}\r\n            <div className={styles.editProfile_button_save}>\r\n                <button onClick={props.enableEditMode}>Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileEditReduxForm = reduxForm({form: 'profileEditForm'})(ProfileEditForm)\r\n\r\nexport default ProfileEditReduxForm;","import React, {useEffect, useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n/*User status*/\r\nconst ProfileStatusWithHooks = (props) => {\r\n    \r\n    let [editMode, setEditMode]  = useState(false);\r\n    let [status, setStatus]  = useState(props.status);\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    \r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n    \r\n    const onStatusChange = (e) =>{\r\n        setStatus(e.target.value);\r\n    };\r\n    \r\n    return (\r\n        <div className={classes.status}>\r\n            {!editMode &&\r\n                <div onClick={activateEditMode}>\r\n                    <span >{ props.status || \"No status\" }</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deActivateEditMode} onChange={onStatusChange} value={ status }/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileStatusWithHooks;","import React  from 'react';\r\nimport classes from './../ProfileInfo/ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"../ProfileInfo/ProfileStatusWithHooks\";\r\n\r\nconst ProfileDescriptions = (props) => {\r\n    return (\r\n        <div className={classes.description}>\r\n            {/*Name*/}\r\n            <div className={classes.description_name}>{props.profile.fullName}</div>\r\n    \r\n            {/*Status*/}\r\n            <div className={classes.description_elem}>\r\n                <ProfileStatusWithHooks profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n           \r\n            {/*<div className={classes.description_elem}>\r\n               <div className={classes.description_title}>Looking for a job</div>\r\n                {props.profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n            </div>*/}\r\n            \r\n            {/*Skills*/}\r\n            <div className={classes.description_elem}>\r\n                <div className={classes.description_title}>Skills: </div>\r\n                {props.profile.lookingForAJobDescription}\r\n            </div>\r\n    \r\n            {/*About me*/}\r\n            <div className={classes.description_elem}>\r\n                <div className={classes.description_title}>About Me</div>\r\n                {props.profile.aboutMe || \"--\"}\r\n            </div>\r\n    \r\n            {/*Contacts*/}\r\n            <div>\r\n                <div className={classes.description_name}>Contacts</div>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <ContactsHelper key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n            \r\n            {/*Button - Settings*/}\r\n            <div className={classes.description_button}>\r\n                {props.isOwner && <button onClick={props.enableEditMode}>Settings</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ContactsHelper = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <span className={classes.contacts_title}>{contactTitle}: </span>\r\n        {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileDescriptions","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/img-user.png\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport ProfileDescription from \"../ProfileDescriptions/ProfileDescriptions\";\r\n\r\nconst ProfileInfo = (props) =>{\r\n    \r\n    let [editMode, setEditMode]  = useState(false);\r\n    \r\n    const onAddMainPhoto = (e) =>{\r\n        if (e.target.files.length){\r\n            props.addPhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    \r\n    let addNewProfileData = (formData) => {\r\n        const promise = props.saveProfile(formData);\r\n        promise.then(() => {\r\n            setEditMode(false)\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <div className={classes.content}>\r\n            <div className={classes.content_profile}>\r\n                <div >\r\n                    {/* User avatar */}\r\n                    <div className={classes.avatar}>\r\n                        <img src={props.profile.photos.small || userPhoto} alt={props.profile.contacts.fullName} />\r\n                    </div>\r\n                </div>\r\n                \r\n                {/*Edit status*/}\r\n                <div>\r\n                    {\r\n                        editMode\r\n                        \r\n                        ? <div>\r\n                                {/* Add file */}\r\n                                <div  className={classes.addUserPhoto}>\r\n                                    {props.isOwner &&\r\n                                        <label >\r\n                                            Upload new photo\r\n                                            <input id={'file_upload'} type={\"file\"} onChange={onAddMainPhoto}/>\r\n                                        </label>\r\n                                    }\r\n                                </div>\r\n                            \r\n                                <ProfileEditForm initialValues={props.profile} onSubmit={addNewProfileData}\r\n                                                 profile={props.profile} />\r\n                          </div>\r\n                          \r\n                        : <ProfileDescription profile={props.profile} status={props.status} isOwner={props.isOwner}\r\n                                              updateUserStatus={props.updateUserStatus}\r\n                                              enableEditMode={() => setEditMode(true)}  />\r\n                        \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n      <div className={classes.wrap}>\r\n        <div className={classes.message}>\r\n          <div className={classes.message__img}>\r\n            <img src=\"https://pbs.twimg.com/profile_images/1186282378714472449/1FFdpXMC_bigger.jpg\" alt=\"\" />\r\n          </div>\r\n          <div className={classes.message__text}>{props.text}</div>       \r\n        </div>\r\n        <div className={classes.like}>{props.likeCount}</div>\r\n      </div>\r\n    );\r\n}\r\nexport default Post;","import React from 'react';\r\nimport classes from './UserPost.module.css';\r\nimport Post from \"../Messages/Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\nconst UserPost = props => {\r\n    let postElements = props.postData.map(post =>\r\n        <Post text={post.post} likeCount={\"likes \" + post.likesCount} key={post.id}/>\r\n    )\r\n    \r\n    let addPost = (formData) => {\r\n        props.addUserPost(formData.postItemText)\r\n    }\r\n    \r\n    return (\r\n        <div  className={classes.user}>\r\n            {/*Posts*/}\r\n            <div className={classes.messagesContainer}>\r\n                {postElements}\r\n            </div>\r\n            \r\n            {/* User comment */}\r\n            <div className={classes.user_post}>\r\n                <AddPostReduxForm onSubmit={addPost}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            \r\n            {/*Add comment*/}\r\n            <Field component={Textarea} name='postItemText'\r\n                   placeholder='Type a comment' validate={[requiredField, maxLength30]}/>\r\n        \r\n            {/*Button - send comment*/}\r\n            <div className={classes.user_post_button}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({form: 'profileAddUserPost'})(AddPostForm)\r\n\r\nexport default UserPost;","import React from 'react';\r\nimport {userPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport UserPost from \"./UserPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postData: state.profilePage.postsData\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        addUserPost: (postItemText) => {\r\n            dispatch(userPostActionCreator(postItemText))\r\n        }\r\n    }\r\n}\r\n\r\nconst UserPostContainer = connect(mapStateToProps, mapDispatchToProps)(UserPost)\r\n\r\nexport default UserPostContainer;","import React from 'react';\r\nimport classes from  './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport UserPostContainer from \"./UserPost/UserPostContainer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport ProfileDescriptions from \"./ProfileDescriptions/ProfileDescriptions\";\r\n\r\nconst Profile = (props) =>{\r\n    \r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    \r\n    /*TODO: перенести все пропсы в переменные, как в примере снизу*/\r\n    const isOwner = props.isOwner;\r\n    const saveProfile = props.saveProfile;\r\n    \r\n    return(\r\n        <div className={classes.profile}>\r\n\r\n            {/* Профиль */}\r\n            <ProfileInfo saveProfile={saveProfile}\r\n                         isOwner={isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         addPhoto={props.addPhoto}\r\n                         updateUserStatus={props.updateUserStatus}\r\n            />\r\n            \r\n        \r\n            {/* Сообщение пользователя */}\r\n            <UserPostContainer />\r\n\r\n      </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPhoto, getUserProfile, getUserStatus, saveProfile, updateUserStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n    \r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId // достем id из url\r\n    \r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Profile saveProfile={this.props.saveProfile}\r\n                     isOwner={!this.props.match.params.userId} // Владелец аккаунта\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     addPhoto={this.props.addPhoto}\r\n                     updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps =(state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    idAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, addPhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}