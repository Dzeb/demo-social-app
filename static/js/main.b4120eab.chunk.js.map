{"version":3,"sources":["redux/dialogReducer.js","Api/Api.js","assets/images/img-user.png","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Common/Preloader/Preloader.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","reportWebVitals.js","utils/object-helpers.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux_store.js","components/Navbar/Navbar.jsx","components/Common/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.jsx","hoc/profileWithSuspense.js","index.js","components/Common/Preloader/Preloader.jsx","components/Common/FormControls/FormControls.module.css","components/Header/Header.module.css","components/Common/FormControls/FormControls.jsx","components/Users/User/User.module.css","utils/validators.js","components/Common/Paginator/Paginator.module.css","components/Users/Users.module.css","redux/profileReducer.js"],"names":["initialState","messagesData","id","message","dialogsData","name","userMessageActionCreator","type","dialogReducer","state","action","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObjectInArray","items","itemID","objPropName","newObjProperty","map","i","users","totalUserCount","isFetching","followingInProgress","followSuccess","userID","unfollowSuccess","setCurrentPage","page","toggleIsFetching","toggleFollowing","followUnfollowHelper","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","totalCount","filter","isAuth","captchaUrl","setAuthUserDataAC","payload","setCaptchaUrlAC","getAuthUserData","url","authReducer","init","appReducer","reducersBundle","combineReducers","profilePage","profileReducer","dialogPage","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","styles","navbarWrap","nav","to","nav_profile","activeClassName","active","nav_dialogs","nav_users","Paginator","totalItemsCount","onPageChanged","amountItemsPerPage","pagesCount","Math","ceil","pagesArr","push","amountPages","useState","currentSegmentOfPages","setCurrentSegmentOfPages","leftPosition","rightPosition","classes","pagination","disabled","onClick","index","selected","item","key","e","User","user","userElem","userElem_image","src","photos","small","userPhoto","alt","userElem_name","userElem_status","some","Users","props","content","createSelector","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","Component","connect","bind","Header","header","logo","user_email","user_button","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","requiredField","d_inlineBlock","error","errorSummary","messages","length","stopSubmit","_error","style","height","valueFromLoginForm","DialogsContainer","lazy","ProfileContainer","App","initApp","exact","path","render","fallback","withRouter","promise","Promise","all","ReactDOM","document","getElementById","preloader","FormControl","input","meta","touched","child","hasError","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","postsData","likesCount","userPostActionCreator","postItemText","setUserStatus","getUserProfile","profileData","getUserStatus","updateUserStatus","addPhoto","file","getState","getStates","reject"],"mappings":"qKAEIA,EAAe,CACfC,aAAc,CACV,CAACC,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,mBAGrBC,YAAa,CACT,CAACF,GAAI,EAAGG,KAAM,YACd,CAACH,GAAI,EAAGG,KAAM,YACd,CAACH,GAAI,EAAGG,KAAM,YACd,CAACH,GAAI,EAAGG,KAAM,YACd,CAACH,GAAI,EAAGG,KAAM,YACd,CAACH,GAAI,EAAGG,KAAM,cAqBXC,EAA2B,SAACH,GAAD,MAAc,CAACI,KAvCjC,cAuCoDJ,YAEzDK,IAnBO,WAAmC,IAAlCC,EAAiC,uDAAzBT,EAAcU,EAAW,uCAEpD,OAAQA,EAAOH,MAEX,IA1BY,cA2BR,OAAO,2BACAE,GADP,IAEIR,aAAa,GAAD,mBACLQ,EAAMR,cADD,CAER,CAACC,GAAI,EAAGC,QAASO,EAAOP,aAGpC,QACI,OAAOM,K,gCCnCnB,qJAEME,EAFN,OAEiBC,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,WACsB,IAAjCC,EAAgC,uDAAlB,EAAGC,EAAe,uDAAJ,GACjC,OAAOT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,OAPoB,SAObC,GACH,OAAOf,EAASgB,KAAT,iBAAwBD,KAEnCE,SAVoB,SAUXF,GACL,OAAOf,EAASkB,OAAT,iBAA0BH,KAErCI,WAboB,SAaTJ,GAEP,OADAK,QAAQC,KAAK,0CACNC,EAAWH,WAAWJ,KAIxBO,EAAa,CACtBH,WADsB,SACXJ,GACP,OAAOf,EAASU,IAAI,WAAaK,IAErCQ,UAJsB,SAIZR,GACN,OAAOf,EAASU,IAAI,kBAAoBK,IAE5CS,aAPsB,SAOTC,GACT,OAAOzB,EAAS0B,IAAI,iBAAkB,CAACD,OAAQA,KAEnDE,UAVsB,SAUZC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClB5B,EAAS0B,IAAI,gBAAiBG,EAAS,CAC1CxB,QAAQ,CACJ,eAAgB,0BAI5B2B,YAnBsB,SAmBVC,GACR,OAAOjC,EAAS0B,IAAI,UAAWO,KAK1BC,EAAU,CAEnBC,GAFmB,WAGf,OAAOnC,EAASU,IAAT,YAGX0B,MANmB,SAMbC,EAAOC,GAA4C,IAAlCC,EAAiC,wDAAbC,EAAa,uDAAL,KAC/C,OAAOxC,EAASgB,KAAT,aAA4B,CAACqB,QAAOC,WAAUC,aAAYC,aAGrEC,OAVmB,WAWf,OAAOzC,EAASkB,OAAT,gBAIFwB,EAAc,CAEvBC,cAFuB,WAGnB,OAAO3C,EAASU,IAAT,+B,oBCxEfkC,EAAOC,QAAU,IAA0B,sC,oBCC3CD,EAAOC,QAAU,CAAC,SAAW,yB,oBCA7BD,EAAOC,QAAU,CAAC,UAAY,2B,oBCA9BD,EAAOC,QAAU,CAAC,aAAe,iC,oBCAjCD,EAAOC,QAAU,CAAC,UAAY,+B,oBCD9BD,EAAOC,QAAU,IAA0B,uC,+ECC3CD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,IAAM,oBAAoB,OAAS,uBAAuB,YAAc,4BAA4B,UAAY,0BAA0B,YAAc,4BAA4B,aAAe,6BAA6B,QAAU,wBAAwB,iBAAmB,iCAAiC,kBAAoB,oC,8DCDpY,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iFCNDO,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAGA,EAAEH,KAAiBD,EACX,2BAAII,GAAMF,GAEdE,MCKXvE,EAAe,CACfwE,MAAO,GACPpD,SAAU,GACVqD,eAAgB,GAChBtD,YAAa,EACbuD,YAAY,EACZC,oBAAqB,IAkDZC,EAAgB,SAACC,GAAD,MAAa,CAACtE,KAhE5B,SAgE0CsE,WAC5CC,EAAkB,SAACD,GAAD,MAAa,CAAEtE,KAhE7B,WAgE6CsE,WAEjDE,EAAiB,SAACC,GAAD,MAAW,CAAEzE,KAhElB,mBAgE0CY,YAAa6D,IAEnEC,EAAmB,SAACP,GAAD,MAAiB,CAACnE,KAhEvB,qBAgEiD0E,iBAAkBP,IACjFQ,EAAkB,SAACP,EAAqBjD,GAAtB,MAAkC,CAACnB,KAhE7B,+BAgEiEoE,sBAAqBjD,WAerHyD,EAAoB,uCAAG,WAAOC,EAAU1D,EAAQ2D,EAAWC,GAApC,SAAAC,EAAA,6DACzBH,EAASF,GAAgB,EAAMxD,IADN,SAEJ2D,EAAU3D,GAFN,OAGQ,IAHR,OAGZF,KAAKgE,YACdJ,EAASE,EAAc5D,IAE3B0D,EAASF,GAAgB,EAAOxD,IANP,2CAAH,4DAqBX+D,EAzFM,WAAmC,IAAlChF,EAAiC,uDAAzBT,EAAcU,EAAW,uCAEnD,OAAQA,EAAOH,MACX,IApBO,SAqBH,OAAO,2BACAE,GADP,IAEI+D,MAAOP,EAAoBxD,EAAM+D,MAAO9D,EAAOmE,OAAQ,KAAM,CAACa,UAAU,MAShF,IA/BS,WAgCL,OAAO,2BACAjF,GADP,IAEI+D,MAAOP,EAAoBxD,EAAM+D,MAAO9D,EAAOmE,OAAQ,KAAM,CAACa,UAAU,MAGhF,IApCU,YAqCN,OAAO,2BAAMjF,GAAb,IAAoB+D,MAAO9D,EAAO8D,QAEtC,IAtCiB,mBAuCb,OAAO,2BAAI/D,GAAX,IAAkBU,YAAaT,EAAOS,cAE1C,IAxCsB,wBAyClB,OAAO,2BAAIV,GAAX,IAAkBgE,eAAgB/D,EAAOiF,aAE7C,IA1CmB,qBA2Cf,OAAO,2BAAIlF,GAAX,IAAkBiE,WAAYhE,EAAOuE,mBAEzC,IA5C6B,+BA8CzB,OAAO,2BACAxE,GADP,IAEIkE,oBAAqBjE,EAAOiE,oBAAP,sBACXlE,EAAMkE,qBADK,CACgBjE,EAAOgB,SACtCjB,EAAMkE,oBAAoBiB,QAAO,SAAA1F,GAAE,OAAIA,IAAOQ,EAAOgB,YAGnE,QACI,OAAOjB,I,QCzDfT,EAAe,CACf0B,OAAQ,KACRsB,MAAO,KACPD,MAAO,KACP8C,QAAQ,EACRC,WAAY,MAcHC,EAAoB,SAACrE,EAAQsB,EAAOD,EAAO8C,GAAvB,MAAmC,CAACtF,KAtB/C,gBAsBoEyF,QAAS,CAACtE,SAAQsB,QAAOD,QAAO8C,YAC7GI,EAAkB,SAACH,GAAD,MAAiB,CAACvF,KAtBjB,0BAsBgDyF,QAAS,CAACF,gBAE7EI,EAAkB,yDAAM,WAAOd,GAAP,uBAAAG,EAAA,sEACV1C,IAAQC,KADE,OAEA,KAD3BvB,EAD2B,QAEpBC,KAAKgE,aAAmB,EACRjE,EAASC,KAAKA,KAAlCwB,EAD2B,EAC3BA,MAAO9C,EADoB,EACpBA,GAAI6C,EADgB,EAChBA,MAChBqC,EAASW,EAAkB7F,EAAI8C,EAAOD,GAAO,KAJhB,2CAAN,uDAmClBO,EAAgB,WACzB,8CAAO,WAAO8B,GAAP,eAAAG,EAAA,sEACsBlC,IAAYC,gBADlC,OACGwC,EADH,OAEHV,EAASa,EAAgBH,EAAWtE,KAAK2E,MAFtC,2CAAP,uDAMWC,EAxDK,WAAmC,IAAlC3F,EAAiC,uDAAzBT,EAAcU,EAAW,uCAClD,OAAQA,EAAOH,MACX,IAbc,gBAcd,IAbwB,0BAcpB,OAAO,2BAAKE,GAAUC,EAAOsF,SAEjC,QACI,OAAOvF,I,kBCjBfT,EAAe,CACfqG,MAAM,GA6BKC,EA1BI,WAAmC,IAAlC7F,EAAiC,uDAAzBT,EAAcU,EAAW,uCACjD,OAAQA,EAAOH,MACX,IARgB,kBASZ,OAAO,2BACAE,GADP,IAEI4F,MAAM,IAGd,QACI,OAAO5F,ICPf8F,EAAiBC,YAAgB,CACjCC,YAAaC,IACbC,WAAYnG,IACZoG,UAAWnB,EACXoB,KAAMT,EACNU,KAAMC,IACNC,IAAKV,IAGHW,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYf,EAAgBU,EAAkBM,YAAgBC,OAI5EN,OAAOG,MAAMA,EAEEA,Q,mGCWAI,EAjCA,WACX,OACI,yBAAKC,UAAWC,IAAOC,YAGnB,yBAAKF,UAAWC,IAAOE,KACnB,4BACI,4BACI,kBAAC,IAAD,CAASC,GAAI,WAAYJ,UAAWC,IAAOI,YAClCC,gBAAiBL,IAAOM,QADjC,YAKJ,4BACI,kBAAC,IAAD,CAASH,GAAI,WAAYJ,UAAWC,IAAOO,YAClCF,gBAAiBL,IAAOM,QADjC,YAOJ,4BACI,kBAAC,IAAD,CAASH,GAAI,SAAUJ,UAAWC,IAAOQ,UAChCH,gBAAiBL,IAAOM,QADjC,c,+DCoBTG,GA3CC,SAAC,GAKb,IALiG,IAAnFC,EAAkF,EAAlFA,gBAAiBjH,EAAiE,EAAjEA,SAAUD,EAAuD,EAAvDA,YAAamH,EAA0C,EAA1CA,cAA0C,IAA3BC,0BAA2B,MAAR,GAAQ,EAE5FC,EAAaC,KAAKC,KAAKL,EAAkBjH,GACzCuH,EAAW,GAEPpE,EAAE,EAAGA,GAAGiE,EAAYjE,IACxBoE,EAASC,KAAKrE,GAGlB,IAAIsE,EAAcJ,KAAKC,KAAKL,EAAkBE,GAC9C,EAAwDO,mBAAS,GAAjE,mBAAKC,EAAL,KAA4BC,EAA5B,KACIC,GAAgBF,EAAwB,GAAKR,EAAqB,EAClEW,EAAgBH,EAAwBR,EAU5C,OACI,yBAAKb,UAAWyB,IAAQC,YACnB,4BAAQC,SAAUN,EAAwB,EAAI,GAAK,OAC3CO,QAXH,WACX,OAAQN,EAA0BD,EAAwB,KASpD,UAGAJ,EAAS/C,QAAO,SAAAZ,GAAI,OAAIA,GAAQiE,GAAgBjE,GAAQkE,KACpD5E,KAAI,SAACU,EAAMuE,GACR,OACI,0BAAM7B,UAAWvG,IAAgB6D,EAAOmE,IAAQK,SAAWL,IAAQM,KAC7DC,IAAKH,EAAQD,QAAS,SAACK,GAAD,OAAOrB,EAActD,KACzCA,MAKnB,4BAAQqE,SAAUR,EAAcE,EAAwB,GAAK,OACrDO,QApBH,WACX,OAAON,EAA0BD,EAAwB,KAkBnD,Y,yCCEEa,GApCJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMlF,EAA2C,EAA3CA,oBAAqBlD,EAAsB,EAAtBA,OAAQG,EAAc,EAAdA,SAC5C,OACI,yBAAK8F,UAAWyB,KAAQW,UACpB,kBAAC,IAAD,CAAShC,GAAI,YAAc+B,EAAK3J,IAE5B,yBAAKwH,UAAWyB,KAAQY,gBACpB,yBAAKC,IAA0B,MAArBH,EAAKI,OAAOC,MAAgBL,EAAKI,OAAOC,MAAQC,KAAWC,IAAKP,EAAKxJ,QAInF,yBAAKqH,UAAWyB,KAAQkB,eACnBR,EAAKxJ,MAIV,yBAAKqH,UAAWyB,KAAQmB,iBACnBT,EAAKzH,SAKbyH,EAAKnE,SACA,4BAAQ2D,SAAU1E,EAAoB4F,MAAK,SAAArK,GAAE,OAAIA,IAAO2J,EAAK3J,MACrDoJ,QAAS,WACL1H,EAASiI,EAAK3J,MAF1B,YAKA,4BAAQmJ,SAAU1E,EAAoB4F,MAAK,SAAArK,GAAE,OAAIA,IAAO2J,EAAK3J,MACrDoJ,QAAS,WACL7H,EAAOoI,EAAK3J,MAFxB,Y,oBCNHsK,GArBH,SAACC,GAET,OACI,yBAAK/C,UAAWyB,KAAQ3E,OAGpB,kBAAC,GAAD,CAAW6D,gBAAiBoC,EAAMhG,eAAgBrD,SAAUqJ,EAAMrJ,SACvDD,YAAasJ,EAAMtJ,YAAcmH,cAAemC,EAAMnC,gBAGjE,yBAAKZ,UAAWyB,KAAQuB,SACnBD,EAAMjG,MAAMF,KAAI,SAAAuF,GAAI,OACjB,kBAAC,GAAD,CAAMA,KAAMA,EAAMlF,oBAAqB8F,EAAM9F,oBACvClD,OAAQgJ,EAAMhJ,OAAQG,SAAU6I,EAAM7I,iB,mBCXnDV,GAAWyJ,cALC,SAAClK,GACtB,OAAOA,EAAMmG,UAAUpC,SAI8B,SAACA,GACtD,OAAOA,EAAMoB,QAAO,SAAApB,GAAK,OAAI,QAGpBoG,GAAc,SAACnK,GACxB,OAAOA,EAAMmG,UAAUxF,UAGdyJ,GAAoB,SAACpK,GAC9B,OAAOA,EAAMmG,UAAUnC,gBAGdqG,GAAiB,SAACrK,GAC3B,OAAOA,EAAMmG,UAAUzF,aAGd4J,GAAgB,SAACtK,GAC1B,OAAOA,EAAMmG,UAAUlC,YAGdsG,GAAyB,SAACvK,GACnC,OAAOA,EAAMmG,UAAUjC,qBCVrBsG,G,4MAMF3C,cAAgB,SAAC4C,GACb,EAAKT,MAAMvJ,SAASgK,EAAY,EAAKT,MAAMrJ,W,uDAL/C,WACI+J,KAAKV,MAAMvJ,SAASiK,KAAKV,MAAMtJ,YAAagK,KAAKV,MAAMrJ,Y,oBAO3D,WACI,OACI,6BAEK+J,KAAKV,MAAM/F,WAAa,kBAAC0G,GAAA,EAAD,MAAe,KAExC,kBAAC,GAAD,CACI3G,eAAgB0G,KAAKV,MAAMhG,eAC3BrD,SAAU+J,KAAKV,MAAMrJ,SACrBD,YAAagK,KAAKV,MAAMtJ,YACxBmH,cAAe6C,KAAK7C,cACpB9D,MAAO2G,KAAKV,MAAMjG,MAClB/C,OAAQ0J,KAAKV,MAAMhJ,OACnBG,SAAUuJ,KAAKV,MAAM7I,SACrB+C,oBAAqBwG,KAAKV,MAAM9F,2B,GAxBvB0G,IAAMC,WA2CpBC,gBAZO,SAAC9K,GACnB,MAAO,CACHW,SAAUwJ,GAAYnK,GACtBgE,eAAgBoG,GAAkBpK,GAClCU,YAAa2J,GAAerK,GAC5BiE,WAAYqG,GAActK,GAC1B+D,MAAOtD,GAAST,GAChBkE,oBAAqBqG,GAAuBvK,MAKZ,CAAEgB,OTyCpB,SAACC,GACnB,8CAAO,WAAO0D,GAAP,SAAAG,EAAA,sEACGJ,EAAqBC,EAAU1D,EAAQT,IAASQ,OAAO+J,KAAKvK,KAAW2D,GAD1E,2CAAP,uDS1C8ChD,STmC1B,SAACF,GACrB,8CAAO,WAAO0D,GAAP,SAAAG,EAAA,sEACGJ,EAAqBC,EAAU1D,EAAQT,IAASW,SAAS4J,KAAKvK,KAAW6D,GAD5E,2CAAP,uDSnCAC,iBAAgBG,kBAAiBhE,STYT,SAAC8D,EAAM5D,GAAP,8CAAoB,WAAOgE,GAAP,eAAAG,EAAA,6DAC5CH,EAASH,GAAiB,IADkB,SAM3BhE,IAASC,SAAS8D,EAAM5D,GANG,OAMxCI,EANwC,OAO5C4D,EAASH,GAAiB,IAC1BG,EAdgC,CAAE7E,KAhEpB,YAgEqCiE,MAcjChD,EAAK0C,QACvBkB,EAb2C,CAAE7E,KAhEnB,wBAgEgDoF,WAa9CnE,EAAKmE,aACjCP,EAASL,EAAeC,IAVoB,2CAApB,wDSbbuG,CACgDN,I,oBCnChDQ,GAvBA,SAAChB,GACZ,OACI,4BAAQ/C,UAAWC,KAAO+D,QAEtB,yBAAKhE,UAAWC,KAAOgE,MACnB,kBAAC,IAAD,CAAS7D,GAAI,YACT,yBAAKkC,IAAI,iEAAiEI,IAAI,WAKtF,yBAAK1C,UAAWC,KAAOkC,MAClBY,EAAM5E,OACD,6BACE,yBAAK6B,UAAWC,KAAOiE,YAAvB,IAAqCnB,EAAMzH,MAA3C,KACA,4BAAQ0E,UAAWC,KAAOkE,YAAavC,QAASmB,EAAMrH,QAAtD,YAEF,kBAAC,IAAD,CAASsE,UAAWC,KAAOkE,YAAa/D,GAAI,UAA5C,YCjBhBgE,G,4JAEF,WACI,OACI,kBAAC,GAAWX,KAAKV,W,GAJCY,IAAMC,WAerBC,gBANS,SAAC9K,GAAD,MAAY,CAChCoF,OAAQpF,EAAMoG,KAAKhB,OACnB9C,MAAOtC,EAAMoG,KAAK9D,MAClBC,MAAOvC,EAAMoG,KAAK7D,SAGkB,CAACI,OViCnB,WAClB,8CAAO,WAAOgC,GAAP,SAAAG,EAAA,sEACoB1C,IAAQO,SAD5B,OAE6B,IAF7B,OAES5B,KAAKgE,YACbJ,EAASW,EAAkB,KAAM,KAAM,MAAM,IAH9C,2CAAP,wDUlCWwF,CAAmCO,I,0DC+B5CC,GAAiBC,aAAU,CAAElF,KAAM,SAAlBkF,EAzCL,SAACvB,GAGf,OACI,6BACI,0BAAMwB,SAAUxB,EAAMyB,cAElB,6BACI,kBAACC,GAAA,EAAD,CAAOC,YAAa,QAAS/L,KAAM,QAASgM,UAAWC,KAAOC,SAAU,CAACC,SAI7E,6BACI,kBAACL,GAAA,EAAD,CAAOC,YAAa,WAAY/L,KAAM,WAAYE,KAAM,WAAY8L,UAAWC,KAAOC,SAAU,CAACC,SAIrG,yBAAK9E,UAAWyB,KAAQsD,eACpB,kBAACN,GAAA,EAAD,CAAO5L,KAAK,WAAWF,KAAM,aAAcgM,UAAWC,QAE1D,6CAfJ,IAe6B,6BAEvB7B,EAAMiC,OAAS,yBAAKhF,UAAWyB,KAAQwD,cAAxB,IAAwClC,EAAMiC,MAA9C,KAEjB,6BACI,0CAIJ,yBAAKhF,UAAWyB,KAAQhG,SACnBsH,EAAM3E,YAAc,yBAAKkE,IAAKS,EAAM3E,WAAYsE,IAAI,MAGzD,6BACKK,EAAM3E,YAAc,kBAACqG,GAAA,EAAD,CAAOC,YAAa,qBAAsB/L,KAAM,UAAYgM,UAAWC,KAAOC,SAAU,CAACC,cAuCnHjB,gBALS,SAAC9K,GAAD,MAAY,CAChCqF,WAAYrF,EAAMoG,KAAKf,WACvBD,OAAQpF,EAAMoG,KAAKhB,UAGiB,CAAC9C,MX/CpB,SAACC,EAAOC,EAAUC,EAAYC,GAC/C,8CAAO,WAAOiC,GAAP,iBAAAG,EAAA,sEACoB1C,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GAD/D,OAI6B,KAH1B5B,EADH,QAISC,KAAKgE,WACbJ,EAASc,MAEuB,KAA7B3E,EAASC,KAAKgE,YACbJ,EAAS9B,KAETnD,EAAUoB,EAASC,KAAKoL,SAASC,OAAS,EAAItL,EAASC,KAAKoL,SAAS,GAAK,aAC9ExH,EAAS0H,YAAW,QAAS,CAACC,OAAQ5M,MAXvC,2CAAP,wDW8CWoL,EA9BD,SAACd,GAaX,OAAGA,EAAM5E,OACE,kBAAC,IAAD,CAAUiC,GAAI,aAIrB,yBAAKkF,MAVI,CACLC,OAAQ,uBAUR,qCACA,kBAAClB,GAAD,CAAgBE,SAlBP,SAACiB,GACfzC,EAAM1H,MAAMmK,EAAmBlK,MAAOkK,EAAmBjK,SAAUiK,EAAmBhK,WAAYgK,EAAmB/J,UAiB5E2C,WAAY2E,EAAM3E,iBCxD5DqH,GAAmBC,gBAAK,kBAAM,iCAC9BC,GAAmBD,gBAAK,kBAAM,iCAE9BE,G,uKAEF,WACInC,KAAKV,MAAM8C,Y,oBAGf,WACI,OAAIpC,KAAKV,MAAMpE,KAKX,yBAAKqB,UAAU,eAEX,kBAAC,GAAD,MACA,kBAAC,EAAD,MAEA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,IAAD,CAAU5F,GAAI,gBAElD,kBAAC,IAAD,CAAO2F,KAAK,oBAAoBC,QCtCxBpC,EDsCqD+B,GCrC9E,SAAC5C,GACJ,OACI,kBAAC,WAAD,CAAUkD,SAAW,kBAACvC,GAAA,EAAD,OACjB,kBAACE,EAAcb,QDoCH,kBAAC,IAAD,CAAOgD,KAAK,WAAWC,OAAS,WAC5B,OACI,kBAAC,WAAD,CAAUC,SAAU,kBAACvC,GAAA,EAAD,OAChB,kBAAC+B,GAAD,UAUZ,kBAAC,IAAD,CAAOM,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,GAAD,WAM5C,yBAAKhG,UAAU,UACV,qDArCL,kBAAC0D,GAAA,EAAD,MCxBgB,IAACE,M,GDgBlBD,IAAMC,WAyDTlE,eACXwG,IACArC,aANoB,SAAC9K,GAAD,MAAY,CAChC4F,KAAM5F,EAAMuG,IAAIX,QAKS,CAACkH,QXxDP,WACnB,OAAO,SAACnI,GACJ,IAAIyI,EAAUzI,EAASc,KAEvB4H,QAAQC,IAAI,CAACF,IACRvM,MAAK,WACF8D,EARc,CAAC7E,KAnBP,2BW2ET6G,CAE0BkG,IEtEzCU,IAASN,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUrG,MAAOA,GACb,kBAAC,GAAD,QAEO4G,SAASC,eAAe,SAO3CzK,K,gCCrBA,wDAYe2H,IARC,WACZ,OACI,yBAAK1D,UAAWyB,IAAQgF,WACpB,yBAAKnE,IAAKmE,IAAY/D,IAAK,iB,mBCNvC7G,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,aAAe,mCAAmC,cAAgB,oCAAoC,QAAU,gC,mBCAtND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4BAA4B,WAAa,6B,kOCE3J4K,EAAc,SAAC,GAAoD,EAAnDC,MAAoD,IAAD,IAA5CC,KAAM5B,EAAsC,EAAtCA,MAAO6B,EAA+B,EAA/BA,QAAoB9D,GAAW,EAArB+D,MAAqB,kBAE/DC,EAAW/B,GAAS6B,EAE1B,OACI,yBAAK7G,UAAWyB,IAAQuF,YAAc,KAAOD,GAAYtF,IAAQuD,QAC7D,6BACKjC,EAAMkE,UAEVF,GAAY,8BAAO/B,KAKnBkC,EAAW,SAACnE,GACrB,IAAO4D,EAAoC5D,EAApC4D,MAAuBQ,GAAapE,EAA7B6D,KAA6B7D,EAAvB+D,MAApB,YAA2C/D,EAA3C,IAEA,OAAO,kBAAC2D,EAAgB3D,EAAO,8CAAc4D,EAAWQ,MAG/CvC,EAAQ,SAAC7B,GAClB,IAAO4D,EAAoC5D,EAApC4D,MAAuBQ,GAAapE,EAA7B6D,KAA6B7D,EAAvB+D,MAApB,YAA2C/D,EAA3C,IAEA,OAAO,kBAAC2D,EAAgB3D,EAAO,2CAAW4D,EAAWQ,O,mBCzBzDtL,EAAOC,QAAU,CAAC,SAAW,uBAAuB,eAAiB,6BAA6B,uBAAyB,qCAAqC,cAAgB,4BAA4B,gBAAkB,8BAA8B,kBAAoB,gCAAgC,iBAAmB,iC,gCCDnU,oEAAO,IAAMgJ,EAAgB,SAACsC,GAC1B,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAGA,EAAMjC,OAASmC,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCLjCzL,EAAOC,QAAU,CAAC,WAAa,8BAA8B,SAAW,8B,mBCAxED,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,wSCOrDxD,EAAe,CACfiP,UAAW,CACP,CAAC/O,GAAI,EAAGyB,KAAM,kMAAmMuN,WAAY,GAC7N,CAAChP,GAAI,EAAGyB,KAAM,qFAAsFuN,WAAY,IAChH,CAAChP,GAAI,EAAGyB,KAAM,iGAAkGuN,WAAY,IAEhItM,QAAS,MA0CFuM,EAAwB,SAACC,GAAD,MAAmB,CAAC7O,KArDtC,WAqDsD6O,iBAE5DC,EAAgB,SAACjN,GAAD,MAAa,CAAC7B,KArDjB,kBAqDwC6B,OAAQA,IAI7DkN,EAAiB,SAAC5N,GACzB,OAAO,SAAC0D,GACJnE,IAASa,WAAWJ,GACfJ,MAAK,SAAAC,GACN6D,EAT8B,CAAC7E,KArDlB,mBAqD0CgP,YAS/BhO,EAASC,YAIlCgO,EAAgB,SAAC9N,GACxB,OAAO,SAAC0D,GACJnD,IAAWC,UAAUR,GAChBJ,MAAK,SAAAC,GACN6D,EAASiK,EAAc9N,EAASC,YAMjCiO,EAAmB,SAACrN,GAAD,OAAY,SAACgD,GACvCnD,IAAWE,aAAaC,GACnBd,MAAK,SAAAC,GAC0B,IAA7BA,EAASC,KAAKgE,YACbJ,EAASiK,EAAcjN,SAMxBsN,EAAW,SAACC,GAAD,OAAU,SAACvK,GAC7BnD,IAAWK,UAAUqN,GAChBrO,MAAK,SAAAC,GAC0B,IAA7BA,EAASC,KAAKgE,YACbJ,EAnC+B,CAAC7E,KArDjB,qBAqD2C0J,OAmChC1I,EAASC,KAAKA,KAAKyI,cAM9CtH,EAAc,SAACC,GAAD,8CAAa,WAAOwC,EAAUwK,GAAjB,iBAAArK,EAAA,6DAC5BsK,EAAYD,IAAW/I,KAAKnF,OADA,SAEXO,IAAWU,YAAYC,GAFZ,UAIE,KAF9BrB,EAF4B,QAIlBC,KAAKgE,WAJa,gBAK1BJ,EAASkK,EAAeO,IALE,8BAO1BzK,EAAS0H,YAAW,kBAAmB,CAACC,OAAQxL,EAASC,KAAKoL,SAAS,MAP7C,kBAQnBkB,QAAQgC,OAAOvO,EAASC,KAAKoL,SAAS,KARnB,4CAAb,yDAaVlG,IAhGQ,WAAmC,IAAlCjG,EAAiC,uDAAzBT,EAAcU,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAhBS,WAiBL,OAAO,2BACAE,GADP,IAEIwO,UAAU,GAAD,mBACFxO,EAAMwO,WADJ,CAEL,CACItN,KAAMjB,EAAO0O,aACblP,GAAI,EACJgP,WAAY,OAM5B,IA7BiB,mBA8Bb,OAAO,2BACAzO,GADP,IAEImC,QAASlC,EAAO6O,cAGxB,IAlCgB,kBAmCZ,OAAO,2BACA9O,GADP,IAEI2B,OAAQ1B,EAAO0B,SAGvB,IAvCmB,qBAwCf,OAAO,2BACA3B,GADP,IAEImC,QAAQ,2BAAKnC,EAAMmC,SAAZ,IAAqBqH,OAAQvJ,EAAOuJ,WAGnD,QACI,OAAOxJ,M","file":"static/js/main.b4120eab.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    messagesData: [\r\n        {id: 1, message: 'Text massage 1'},\r\n        {id: 2, message: 'Text massage 2'},\r\n        {id: 3, message: 'Text massage 3'},\r\n        {id: 4, message: 'Text massage 4'},\r\n        {id: 5, message: 'Text massage 5'},\r\n        {id: 6, message: 'Text massage 6'}\r\n    ],\r\n    \r\n    dialogsData: [\r\n        {id: 1, name: 'Person 1'},\r\n        {id: 2, name: 'Person 2'},\r\n        {id: 3, name: 'Person 3'},\r\n        {id: 4, name: 'Person 4'},\r\n        {id: 5, name: 'Person 5'},\r\n        {id: 6, name: 'Person 6'}\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type){\r\n        \r\n        case ADD_MESSAGE:\r\n            return  {\r\n                ...state,\r\n                messagesData: [\r\n                    ...state.messagesData,\r\n                    {id: 7, message: action.message}\r\n                ]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let userMessageActionCreator = (message) => ({type: ADD_MESSAGE, message});\r\n\r\nexport default dialogReducer;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"9a6d66d9-fafb-4981-af16-47b8a13fbbc3\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Use profileAPI object');\r\n        return profileAPI.getProfile(userId); //Делегирование\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put('profile/status', {status: status});\r\n    },\r\n    savePhoto(photoFile){\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put('profile/photo', formData,{\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put('profile', profile);\r\n    }\r\n}\r\n\r\n/*Формы, авторизация*/\r\nexport const authAPI = {\r\n    //get auth data - id, email, login\r\n    me(){\r\n        return instance.get(`auth/me`);\r\n    },\r\n    //post login data - id, email, login, captcha\r\n    login(email, password, rememberMe = false, captcha=null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\r\n    },\r\n    //logout\r\n    logout(){\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    //get captcha url\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`);\r\n    },\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/img-user.247889bf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsWrap\":\"News_newsWrap__1cCW9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicWrap\":\"Music_musicWrap__1zx9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsWrap\":\"Settings_settingsWrap__3b-la\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__ywX_c\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.f2f4374a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarWrap\":\"Navbar_navbarWrap__2VJ8m\",\"nav\":\"Navbar_nav__OTTmQ\",\"active\":\"Navbar_active__2HfI9\",\"nav_profile\":\"Navbar_nav_profile__p_-Hm\",\"nav_users\":\"Navbar_nav_users__8Lja2\",\"nav_dialogs\":\"Navbar_nav_dialogs__2Y3XK\",\"friendsTitle\":\"Navbar_friendsTitle__WuqMj\",\"friends\":\"Navbar_friends__-7cj_\",\"friendsItem__img\":\"Navbar_friendsItem__img__OD1Gm\",\"friendsItem__name\":\"Navbar_friendsItem__name__zBvGr\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nexport const updateObjectInArray = (items, itemID, objPropName, newObjProperty) => {\r\n    return items.map(i => {\r\n        if(i[objPropName] === itemID){\r\n            return {...i, ...newObjProperty}\r\n        }\r\n        return i\r\n    })\r\n}","import {usersAPI} from \"../Api/Api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUserCount: 21,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type){\r\n        case FOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: true})\r\n               /* users: state.users.map(user => {\r\n                    if(user.id === action.userID){\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })*/\r\n            }\r\n    \r\n        case UNFOLLOW:\r\n            return  {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userID, \"id\", {followed: false} )\r\n            }\r\n        \r\n        case SET_USERS:\r\n            return {  ...state, users: action.users }\r\n        \r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        \r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUserCount: action.totalCount}\r\n        \r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.toggleIsFetching}\r\n        \r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            \r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollowSuccess = (userID) => ({ type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({ type: SET_USERS, users});\r\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, currentPage: page});\r\nexport const setTotalUsersCount = (number) => ({ type: SET_TOTAL_USERS_COUNT, totalCount: number});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, toggleIsFetching: isFetching});\r\nexport const toggleFollowing = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    /*Запрос на сервер,\r\n    * получение данных, диспатчим данные в redux-store\r\n    * */\r\n\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(setCurrentPage(page));\r\n}\r\n\r\nconst followUnfollowHelper = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowing(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowing(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowHelper(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowHelper(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import {authAPI, securityAPI} from \"../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET-CAPTCHA-URL-SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return  {...state, ...action.payload }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\r\nexport const setCaptchaUrlAC = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {email, id, login} = response.data.data\r\n        dispatch(setAuthUserDataAC(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.login(email, password, rememberMe, captcha);\r\n        //success, get auth data\r\n        //error, get captcha\r\n        if(response.data.resultCode === 0){\r\n            dispatch(getAuthUserData());\r\n        }else {\r\n            if(response.data.resultCode === 10){\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        const response = await authAPI.logout()\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setAuthUserDataAC(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\n/*Captcha*/\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch) => {\r\n        const captchaUrl = await securityAPI.getCaptchaUrl();\r\n        dispatch(setCaptchaUrlAC(captchaUrl.data.url));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\nlet initialState = {\r\n    init: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case SET_INITIALIZED:\r\n            return  {\r\n                ...state,\r\n                init: true\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInit = () => ({type: SET_INITIALIZED});\r\n\r\nexport const initApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        \r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(setInit());\r\n            })\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet reducersBundle = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducersBundle, composeEnhancers( applyMiddleware(thunkMiddleware)));\r\n\r\n/*let store = createStore(reducersBundle, applyMiddleware(thunkMiddleware));*/\r\n\r\nwindow.store=store;\r\n\r\nexport default store;","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className={styles.navbarWrap}>\r\n            \r\n            {/*Навигация*/}\r\n            <nav className={styles.nav}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink to={\"/profile\"} className={styles.nav_profile}\r\n                                 activeClassName={styles.active}>\r\n                            Profile\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to={\"/dialogs\"} className={styles.nav_dialogs}\r\n                                 activeClassName={styles.active}>\r\n                            Dialogs\r\n                        </NavLink>\r\n                    </li>\r\n                    {/*<li><NavLink to={\"/news\"} activeClassName={classes.active}>News</NavLink></li>\r\n                    <li><NavLink to={\"/music\"} activeClassName={classes.active}>Music</NavLink></li>*/}\r\n                    <li>\r\n                        <NavLink to={\"/users\"} className={styles.nav_users}\r\n                                 activeClassName={styles.active}>\r\n                            Users\r\n                        </NavLink>\r\n                    </li>\r\n                    {/*<li><NavLink to={\"/settings\"} activeClassName={classes.active}>Settings</NavLink></li>*/}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import React, {useState} from \"react\";\r\nimport classes from \"../../Common/Paginator/Paginator.module.css\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, amountItemsPerPage=10}) => {\r\n    \r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pagesArr = [];\r\n\r\n    for(let i=1; i<=pagesCount; i++){\r\n        pagesArr.push(i)\r\n    }\r\n    \r\n    let amountPages = Math.ceil(totalItemsCount / amountItemsPerPage);\r\n    let [currentSegmentOfPages, setCurrentSegmentOfPages] = useState(1);\r\n    let leftPosition = (currentSegmentOfPages - 1) * amountItemsPerPage + 1;\r\n    let rightPosition = currentSegmentOfPages * amountItemsPerPage;\r\n    \r\n    let decrement=()=>{\r\n       return  setCurrentSegmentOfPages( currentSegmentOfPages - 1)\r\n    }\r\n    \r\n    let increment=()=>{\r\n       return setCurrentSegmentOfPages( currentSegmentOfPages + 1)\r\n    }\r\n\r\n    return(\r\n        <div className={classes.pagination}>\r\n            {<button disabled={currentSegmentOfPages > 1 ? \"\" : \"true\"}\r\n                     onClick={decrement}> « </button>}\r\n        \r\n            {pagesArr.filter(page => page >= leftPosition && page <= rightPosition)\r\n                .map((page, index) => {\r\n                    return (\r\n                        <span className={currentPage === page ? classes.selected : classes.item}\r\n                              key={index}  onClick={(e) => onPageChanged(page)}>\r\n                              { page }\r\n                        </span>\r\n                    )\r\n                })}\r\n            \r\n            {<button disabled={amountPages > currentSegmentOfPages ? \"\" : \"true\"}\r\n                     onClick={increment}> » </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport classes from \"./User.module.css\";\r\nimport userPhoto from \"../../../assets/images/img-user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return(\r\n        <div className={classes.userElem}>\r\n            <NavLink to={'/Profile/' + user.id}>\r\n                {/*Avatar*/}\r\n                <div className={classes.userElem_image}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} alt={user.name}/>\r\n                </div>\r\n            \r\n                {/*User name*/}\r\n                <div className={classes.userElem_name}>\r\n                    {user.name}\r\n                </div>\r\n            \r\n                {/*User status*/}\r\n                <div className={classes.userElem_status}>\r\n                    {user.status}\r\n                </div>\r\n            </NavLink>\r\n            \r\n            {/*Button - follow / unfollow*/}\r\n            {user.followed\r\n                ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              unfollow(user.id)\r\n                          }}>unfollow</button>\r\n            \r\n                : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                          onClick={() => {\r\n                              follow(user.id)\r\n                          }}>follow</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\nimport classes from \"./Users.module.css\";\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    return(\r\n        <div className={classes.users}>\r\n    \r\n            {/*Paginator*/}\r\n            <Paginator totalItemsCount={props.totalUserCount} pageSize={props.pageSize}\r\n                       currentPage={props.currentPage}  onPageChanged={props.onPageChanged} />\r\n            \r\n            {/*User*/}\r\n            <div className={classes.content}>\r\n                {props.users.map(user =>\r\n                    <User user={user} followingInProgress={props.followingInProgress}\r\n                          follow={props.follow} unfollow={props.unfollow}/>\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\n//примитивный селектор\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n//селектор из библиотеки reselect\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(users => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUserCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowing,\r\n    requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount, getUsers\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    \r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*Прелоадер*/}\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n               \r\n                <Users\r\n                    totalUserCount={this.props.totalUserCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        users: getUsers(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { follow, unfollow,\r\n    setCurrentPage, toggleFollowing, getUsers: requestUsers })(UsersContainer);","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n/*Header*/\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            {/*Logo*/}\r\n            <div className={styles.logo}>\r\n                <NavLink to={'/profile'}>\r\n                    <img src=\"https://i.ya-webdesign.com/images/png-background-creator-8.png\" alt='logo'/>\r\n                </NavLink>\r\n            </div>\r\n    \r\n            {/*Login / Logout*/}\r\n            <div className={styles.user}>\r\n                {props.isAuth\r\n                    ? <div>\r\n                        <div className={styles.user_email}> {props.email} </div>\r\n                        <button className={styles.user_button} onClick={props.logout}>Log out</button>\r\n                      </div>\r\n                    : <NavLink className={styles.user_button} to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    email: state.auth.email\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormControls/FormControls\";\r\nimport {requiredField} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport classes from \"./../Common/FormControls/FormControls.module.css\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n    //let test = props.captchaUrl;\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                {/*Email*/}\r\n                <div>\r\n                    <Field placeholder={'Email'} name={'email'} component={Input} validate={[requiredField]}/>\r\n                </div>\r\n                \r\n                {/*Login*/}\r\n                <div>\r\n                    <Field placeholder={'Password'} name={'password'} type={\"password\"} component={Input} validate={[requiredField]}/>\r\n                </div>\r\n                \r\n                {/*Checkbox - Remember me*/}\r\n                <div className={classes.d_inlineBlock}>\r\n                    <Field type=\"checkbox\" name={'rememberMe'} component={Input}/>\r\n                </div>\r\n                <span>Remember me</span> <br/>\r\n                \r\n                { props.error && <div className={classes.errorSummary}> {props.error} </div> }\r\n                \r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n    \r\n                {/*show captcha*/}\r\n                <div className={classes.captcha}>\r\n                    {props.captchaUrl && <img src={props.captchaUrl} alt=\"\"/>}\r\n                </div>\r\n                {/*captcha*/}\r\n                <div>\r\n                    {props.captchaUrl && <Field placeholder={'Symbols from image'} name={'captcha'}  component={Input} validate={[requiredField]}/>}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    //get data from LoginForm\r\n    const onSubmit = (valueFromLoginForm) =>{\r\n       props.login(valueFromLoginForm.email, valueFromLoginForm.password, valueFromLoginForm.rememberMe, valueFromLoginForm.captcha);\r\n    }\r\n    \r\n    /*css styles*/\r\n    const style = {\r\n        content: {\r\n            height: 'calc(100vh - 95px)'\r\n        }\r\n    }\r\n    \r\n    if(props.isAuth){\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    \r\n    return (\r\n        <div style={style.content}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport { Suspense, lazy } from 'react';\r\nimport {profileWithSuspense} from \"./hoc/profileWithSuspense\";\r\n\r\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = lazy(() => import (\"./components/Profile/ProfileContainer\"));\r\n\r\nclass App extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.initApp();\r\n    }\r\n    \r\n    render() {\r\n        if(!this.props.init){\r\n            return <Preloader />\r\n        }\r\n        \r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                \r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                \r\n                <div className=\"app-content\">\r\n                    <div className=\"content-box\">\r\n                        <Switch>\r\n                            <Route exact path='/' render={() => <Redirect to={\"/profile\"} />}/>\r\n        \r\n                            <Route path='/profile/:userId?' render={ profileWithSuspense(ProfileContainer)}/>\r\n        \r\n                            <Route path='/dialogs' render={ () => {\r\n                                return (\r\n                                    <Suspense fallback={<Preloader />}>\r\n                                        <DialogsContainer/>\r\n                                    </Suspense>\r\n                                )\r\n                            }}/>\r\n        \r\n                            {/* <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n    \r\n                        <Route path='/settings' render={() => <Settings/>}/>*/}\r\n        \r\n                            <Route path='/users' render={() => <UsersContainer/>}/>\r\n                            <Route path='/login' render={() => <LoginPage/>}/>\r\n                            {/* <Route  path='*' render={() => <div>404 NOT FOUND</div>}/>*/}\r\n    \r\n                        </Switch>\r\n                    </div>\r\n                    \r\n                   <div className=\"footer\">\r\n                        <p>Copyright © 2021</p>\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    init: state.app.init\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initApp}))(App);\r\n\r\n","import React, {Suspense} from 'react';\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\n\r\nexport const profileWithSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={ <Preloader /> }>\r\n                <Component {...props}/>\r\n            </Suspense>\r\n        )\r\n    }\r\n}","import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport store from \"./redux/redux_store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root')\r\n)\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import classes from \"./Preloader.module.css\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return(\r\n        <div className={classes.preloader}>\r\n            <img src={preloader}  alt={\"preloader\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18R7o\",\"error\":\"FormControls_error__1_W_d\",\"errorSummary\":\"FormControls_errorSummary__nSsXZ\",\"d_inlineBlock\":\"FormControls_d_inlineBlock__XrI4l\",\"captcha\":\"FormControls_captcha__1chiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yPlg\",\"logo\":\"Header_logo__15-rM\",\"user\":\"Header_user__3n5E0\",\"user_button\":\"Header_user_button__3eAFS\",\"user_email\":\"Header_user_email__3-KbV\"};","import React from \"react\";\r\nimport classes from \"../FormControls/FormControls.module.css\";\r\n\r\nconst FormControl = ({input, meta:{error, touched}, child, ...props}) => {\r\n    //const hasError = meta.error && meta.touched;\r\n    const hasError = error && touched;\r\n    \r\n    return (\r\n        <div className={classes.formControl + ' ' + (hasError && classes.error) }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    \r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    \r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userElem\":\"User_userElem__2Bec4\",\"userElem_image\":\"User_userElem_image__38Csw\",\"userElem_nameAndStatus\":\"User_userElem_nameAndStatus__2okI4\",\"userElem_name\":\"User_userElem_name__223P1\",\"userElem_status\":\"User_userElem_status__15JlM\",\"userElem_location\":\"User_userElem_location__3ACNT\",\"userElem_country\":\"User_userElem_country__gdQnG\"};","export const requiredField = (value) => {\r\n    if(value) return undefined;\r\n    return \"Fiels is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__2Y52C\",\"selected\":\"Paginator_selected__31wv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3NLCE\",\"content\":\"Users_content__3ZtCY\"};","import {profileAPI, usersAPI} from \"../Api/Api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS'\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {id: 1, post: 'With our simple and useful tool you can generate a standard text which you can place in your web design to look more realistic. Would you like to get new text generated for your next project?', likesCount: 3},\r\n        {id: 2, post: 'Use the following options to generate a new lorem ipsum text for your next project', likesCount: 12},\r\n        {id: 3, post: 'When you construct a web design you are most likely to not have any content in the beginning. ', likesCount: 5}\r\n    ],\r\n    profile: null\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST: {\r\n            return  {\r\n                ...state,\r\n                postsData:[\r\n                    ...state.postsData,\r\n                    {\r\n                        post: action.postItemText,\r\n                        id: 4,\r\n                        likesCount: 0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n        \r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profileData\r\n            }\r\n        \r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n            \r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let userPostActionCreator = (postItemText) => ({type: ADD_POST, postItemText});\r\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profileData: profile});\r\nexport let setUserStatus = (status) => ({type: SET_USER_STATUS, status: status});\r\nexport let savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos: photos});\r\n\r\n\r\nexport let getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        } )\r\n    }\r\n};\r\nexport let getUserStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(response => {\r\n            dispatch(setUserStatus(response.data));\r\n        } )\r\n    }\r\n};\r\n\r\n\r\nexport let updateUserStatus = (status) => (dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setUserStatus(status));\r\n        }\r\n    } )\r\n};\r\n\r\n/*Добавить фотографию пользователя*/\r\nexport let addPhoto = (file) => (dispatch) => {\r\n    profileAPI.savePhoto(file)\r\n        .then(response => {\r\n        if(response.data.resultCode === 0){\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    } )\r\n};\r\n\r\n/*Сохранить редактирование профиля и обновить данные */\r\nexport let saveProfile = (profile) => async (dispatch, getState) => {\r\n    const getStates = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n    \r\n        if(response.data.resultCode === 0){\r\n            dispatch(getUserProfile(getStates));\r\n        }else{\r\n            dispatch(stopSubmit(\"profileEditForm\", {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n};\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}