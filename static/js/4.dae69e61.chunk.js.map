{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/UsersMessages/UsersMessages.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","to","dialogNavItem","activeClassName","active","dialogNavItem__avatar","src","alt","dialogNavItem__name","person","UsersMessages","message","text","maxLength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","dialogAddMessageButton","Dialogs","dialogElements","dialogPage","dialogsData","map","key","messageElements","messagesData","isAuth","dialogWrap","dialogs","messages","messages__wrap","addMessage","formData","addUserMessage","textMessageItem","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","userMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,wBAAwB,sBAAwB,uCAAuC,oBAAsB,qCAAqC,SAAW,0BAA0B,QAAU,yBAAyB,eAAiB,gCAAgC,WAAa,4BAA4B,uBAAyB,0C,+FCmBtcC,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAQC,QACpB,kBAAC,IAAD,CAASC,GAAIL,EAAME,UAAWC,IAAQG,cAAeC,gBAAiBJ,IAAQK,QAC1E,yBAAKN,UAAWC,IAAQM,uBACpB,yBAAKC,IAAI,sKAAsKC,IAAI,MAEvL,yBAAKT,UAAWC,IAAQS,qBAAsBb,EAAMc,WCNrDC,EAJO,SAACf,GACnB,OAAO,yBAAKG,UAAWC,IAAQY,SAAUhB,EAAMiB,O,yCC8C7CC,EAAcC,YAAiB,IAc/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACrB,GAEpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,kBACzBC,YAAY,kBAAkBC,SAAU,CAACC,IAAeb,KAEhE,4BAAQf,UAAWC,IAAQ4B,wBAA3B,cAOGC,EAzDC,SAACjC,GAEb,IAAIkC,EAAiBlC,EAAMmC,WAAWC,YAAYC,KAAI,SAAAhC,GAAM,OACxD,kBAAC,EAAD,CAAYH,GAAIG,EAAOH,GAAIY,OAAQT,EAAOuB,KAAMU,IAAKjC,EAAOH,QAG5DqC,EAAkBvC,EAAMmC,WAAWK,aAAaH,KAAI,SAAArB,GAAO,OAC3D,kBAAC,EAAD,CAAeC,KAAMD,EAAQA,QAASsB,IAAKtB,EAAQd,QAGvD,IAAIF,EAAMyC,OAAQ,OAAO,kBAAC,IAAD,CAAUnC,GAAI,WAMvC,OACI,yBAAKH,UAAWC,IAAQsC,YAGpB,yBAAKvC,UAAWC,IAAQuC,SACnBT,GAIL,yBAAK/B,UAAWC,IAAQwC,UAGpB,yBAAKzC,UAAWC,IAAQyC,gBACnBN,GAIL,yBAAKpC,UAAWC,IAAQ0C,YACpB,kBAAC1B,EAAD,CAAqBG,SAtBpB,SAACwB,GACd/C,EAAMgD,eAAeD,EAASE,wB,wCClBlCC,EAA4B,SAACC,GAAD,MAAY,CACxCV,OAAQU,EAAMC,KAAKX,S,OCgBRY,sBACXC,aAfkB,SAACH,GACnB,MAAO,CACHhB,WAAYgB,EAAMhB,eAID,SAACoB,GACtB,MAAO,CACHP,eAAgB,SAACC,GACbM,EAASC,YAAyBP,UDRd,SAACQ,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAIC,KAAK3D,MAAMyC,OACR,kBAACgB,EAAcE,KAAK3D,OADG,kBAAC,IAAD,CAAUM,GAAI,eAJT,GAEXsD,IAAMH,WAOtC,OAAOH,YAAQJ,EAARI,CAAoCI,KCIhCL,CAGbpB","file":"static/js/4.dae69e61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrap\":\"Dialogs_dialogWrap__2tfyl\",\"dialogs\":\"Dialogs_dialogs__3XorO\",\"dialog\":\"Dialogs_dialog__3iaYR\",\"active\":\"Dialogs_active__2A5lW\",\"dialogNavItem__avatar\":\"Dialogs_dialogNavItem__avatar__2tCQQ\",\"dialogNavItem__name\":\"Dialogs_dialogNavItem__name__1SCC2\",\"messages\":\"Dialogs_messages__MxCsm\",\"message\":\"Dialogs_message__3RB6K\",\"messages__wrap\":\"Dialogs_messages__wrap__2fKse\",\"addMessage\":\"Dialogs_addMessage__2SL1h\",\"dialogAddMessageButton\":\"Dialogs_dialogAddMessageButton__pSyNn\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//Диалог\r\nconst DialogItem = (props) =>{\r\n    let path = \"/dialogs/\" + props.id;\r\n    \r\n    return(\r\n        <div className={classes.dialog}>\r\n            <NavLink to={path} className={classes.dialogNavItem} activeClassName={classes.active}>\r\n                <div className={classes.dialogNavItem__avatar}>\r\n                    <img src=\"https://sun9-36.userapi.com/s/v1/ig1/mD30tqXN88MWbiNShELuWw8xRhviRzyn4ecEInLWNDNxVJFR08_wGHdTxgn_KnsKsw_alH2p.jpg?size=100x100&quality=96&crop=433,72,544,544&ava=1\" alt=\"\"/>\r\n                </div>\r\n                <div className={classes.dialogNavItem__name}>{props.person}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\n//Сообщение\r\nconst UsersMessages = (props) =>{\r\n    return <div className={classes.message}>{props.text}</div>\r\n}\r\n\r\nexport default UsersMessages;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport UsersMessages from \"./UsersMessages/UsersMessages\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormControls/FormControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let dialogElements = props.dialogPage.dialogsData.map(dialog =>\r\n        <DialogItem id={dialog.id} person={dialog.name} key={dialog.id}/>\r\n    );\r\n    \r\n    let messageElements = props.dialogPage.messagesData.map(message =>\r\n        <UsersMessages text={message.message} key={message.id}/>\r\n    );\r\n    \r\n    if(!props.isAuth) return <Redirect to={\"/login\"}/>\r\n    \r\n    let addMessage = (formData) => {\r\n        props.addUserMessage(formData.textMessageItem)\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.dialogWrap}>\r\n            \r\n            {/*Блок - Диалоги*/}\r\n            <div className={classes.dialogs}>\r\n                {dialogElements}\r\n            </div>\r\n    \r\n    \r\n            <div className={classes.messages}>\r\n        \r\n                {/*Блок - Все сообщения*/}\r\n                <div className={classes.messages__wrap}>\r\n                    {messageElements}\r\n                </div>\r\n    \r\n                {/*Ввод сообщения*/}\r\n                <div className={classes.addMessage}>\r\n                    <AddMessageReduxForm onSubmit={addMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name='textMessageItem'\r\n                    placeholder='Type message...' validate={[requiredField, maxLength10]}/>\r\n            \r\n            <button className={classes.dialogAddMessageButton}> Send </button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    \r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import React from \"react\";\r\nimport {userMessageActionCreator} from \"../../redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUserMessage: (textMessageItem) => {\r\n            dispatch(userMessageActionCreator(textMessageItem));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}